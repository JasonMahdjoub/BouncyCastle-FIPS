/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
import org.gradle.plugins.ide.eclipse.model.AccessRule

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'signing'


Properties props = new Properties()
def propFile = file('../../credentials.properties')
def artifactory_Url="https://artifactory.distri-mind.fr/artifactory"
def user=""
def pwd=""
if (propFile.canRead())
{
    props.load(new FileInputStream(propFile))


    if (props!=null && props.containsKey('artifactory_contextUrl'))
        artifactory_Url=props.get("artifactory_contextUrl")
    if (props!=null && props.containsKey('artifactory_user'))
        user=props.get("artifactory_user")
    if (props!=null && props.containsKey('artifactory_password'))
        pwd=props.get("artifactory_password")
}


eclipse {
    classpath {
       downloadSources=true
       file {
            whenMerged {
                def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }
                jre.accessRules.add(new AccessRule('0', 'sun/security/**'))
            }
        }
    }
}

   
repositories {


   	maven {
       		url "${artifactory_Url}/gradle-release"
       		if (user!="")
       		{
	       		credentials {
	              username "${user}"
	              password "${pwd}"
	            }
	         }
   	} 
}

dependencies {
}

def javaVersion="8"
sourceCompatibility = javaVersion
targetCompatibility= javaVersion
version='1.0.2.1-DMRECOMPILE'

idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
    }
}

allprojects {
	group='com.distrimind.bcfips'

    //compileJava.options.compilerArgs << "-Xlint"
    //compileJava.options.compilerArgs.addAll(['--release', javaVersion])



	
}



task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
    from "../LICENSE"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
    from "../LICENSE"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
    from "../LICENSE"

}



publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'BouncyCastle-Fips recompiled By DistriMind'
                description = 'Encryption tools'
                url = 'https://github.com/JazZ51/BouncyCastle-FIPS'
                developers {
                    developer {
                        id = 'mahdjoub'
                        name = 'Jason Mahdjoub'
                        email = 'jason.mahdjoub@distri-mind.fr'
                    }
                }
                organization {
                    name = 'DistriMind'
                    url = 'https://github.com/JazZ51'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/JazZ51/BouncyCastle-FIPS/issues'
                }
                scm {
                    connection = 'https://github.com/JazZ51/BouncyCastle-FIPS'
                }
                licenses {
                    license {
                        name = 'The Bouncy Castle License'
                        url = 'http://www.bouncycastle.org'
                    }
                }

            }
        }
    }
    repositories {
        maven {
            credentials {
                username "${user}"
                password "${pwd}"
            }
            url "${artifactory_Url}/DistriMind-Public"
        }
    }
}
signing {
    useGpgCmd()
    sign configurations.archives
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}





